// –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤
import { PrismaClient } from '@prisma/client'
import fs from 'fs'
import path from 'path'

const prisma = new PrismaClient()

// –ú–∞–ø–ø–∏–Ω–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤
const drinkImages = {
  '–ö–æ–∫–∞-–ö–æ–ª–∞': '/images/drinks/coca-cola.jpg',
  '–§–∞–Ω—Ç–∞': '/images/drinks/fanta.jpg', 
  '–°–ø—Ä–∞–π—Ç': '/images/drinks/sprite.jpg',
  '–¢–∞–Ω': '/images/drinks/tan.jpg',
  '–ú–∏–Ω–µ—Ä–∞–ª—å–Ω–∞—è –≤–æ–¥–∞': '/images/drinks/water.jpg',
  '–°–æ–∫ (–∞—Å—Å–æ—Ä—Ç–∏)': '/images/drinks/juice.jpg'
}

async function createDrinkImages() {
  try {
    console.log('ü•§ –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤...\n')
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞–ø–∏—Ç–∫–æ–≤
    const drinksDir = path.join(process.cwd(), 'public', 'images', 'drinks')
    if (!fs.existsSync(drinksDir)) {
      fs.mkdirSync(drinksDir, { recursive: true })
      console.log('üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞–ø–∏—Ç–∫–æ–≤')
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞–ø–∏—Ç–∫–∏
    const drinks = await prisma.product.findMany({
      where: {
        category: '–û—Å–≤–µ–∂–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏'
      }
    })
    
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${drinks.length} –Ω–∞–ø–∏—Ç–∫–æ–≤`)
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ SVG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤
    for (const drink of drinks) {
      const drinkName = drink.name
      const svgContent = createDrinkSVG(drinkName)
      const svgPath = path.join(drinksDir, `${drinkName.toLowerCase().replace(/\s+/g, '-')}.svg`)
      
      fs.writeFileSync(svgPath, svgContent)
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const imagePath = `/images/drinks/${drinkName.toLowerCase().replace(/\s+/g, '-')}.svg`
      await prisma.product.update({
        where: { id: drink.id },
        data: { image: imagePath }
      })
      
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: ${drinkName}`)
    }
    
    console.log('\nüéâ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤ —Å–æ–∑–¥–∞–Ω—ã!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

function createDrinkSVG(drinkName: string): string {
  const colors = {
    '–ö–æ–∫–∞-–ö–æ–ª–∞': '#E60012',
    '–§–∞–Ω—Ç–∞': '#FF8C00', 
    '–°–ø—Ä–∞–π—Ç': '#00B04F',
    '–¢–∞–Ω': '#F0E68C',
    '–ú–∏–Ω–µ—Ä–∞–ª—å–Ω–∞—è –≤–æ–¥–∞': '#87CEEB',
    '–°–æ–∫ (–∞—Å—Å–æ—Ä—Ç–∏)': '#FF6347'
  }
  
  const color = colors[drinkName as keyof typeof colors] || '#87CEEB'
  
  return `<?xml version="1.0" encoding="UTF-8"?>
<svg width="200" height="200" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="bottleGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:${color};stop-opacity:1" />
      <stop offset="100%" style="stop-color:${color}CC;stop-opacity:1" />
    </linearGradient>
  </defs>
  
  <!-- Bottle body -->
  <rect x="70" y="60" width="60" height="100" rx="8" fill="url(#bottleGradient)" stroke="#333" stroke-width="2"/>
  
  <!-- Bottle neck -->
  <rect x="80" y="50" width="40" height="20" rx="4" fill="url(#bottleGradient)" stroke="#333" stroke-width="2"/>
  
  <!-- Bottle cap -->
  <rect x="75" y="45" width="50" height="15" rx="3" fill="#666" stroke="#333" stroke-width="1"/>
  
  <!-- Liquid level -->
  <rect x="75" y="80" width="50" height="60" rx="4" fill="${color}80"/>
  
  <!-- Bubbles -->
  <circle cx="90" cy="100" r="3" fill="white" opacity="0.7"/>
  <circle cx="110" cy="110" r="2" fill="white" opacity="0.7"/>
  <circle cx="95" cy="120" r="2.5" fill="white" opacity="0.7"/>
  <circle cx="105" cy="130" r="2" fill="white" opacity="0.7"/>
  
  <!-- Label -->
  <rect x="75" y="70" width="50" height="15" rx="2" fill="white" opacity="0.9"/>
  <text x="100" y="80" text-anchor="middle" font-family="Arial, sans-serif" font-size="8" fill="#333">${drinkName}</text>
</svg>`
}

createDrinkImages()
