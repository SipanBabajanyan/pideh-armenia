// –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è buy.am
import puppeteer from 'puppeteer'

async function simpleParse() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ buy.am...')
  
  const browser = await puppeteer.launch({
    headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  })
  
  try {
    const page = await browser.newPage()
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º User-Agent
    await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36')
    
    console.log('üì± –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É PIDEH –Ω–∞ buy.am...')
    await page.goto('https://buy.am/ru/restaurants/pideh', {
      waitUntil: 'networkidle2',
      timeout: 30000
    })
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
    await new Promise(resolve => setTimeout(resolve, 5000))
    
    console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã...')
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const pageInfo = await page.evaluate(() => {
      const title = document.title
      const url = window.location.href
      const bodyText = document.body.textContent || ''
      
      // –ò—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º
      const allElements = document.querySelectorAll('*')
      const textElements = Array.from(allElements)
        .filter(el => {
          const text = el.textContent?.trim() || ''
          return text.length > 5 && text.length < 200
        })
        .slice(0, 20) // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 20
        .map(el => ({
          tagName: el.tagName,
          className: el.className,
          text: el.textContent?.trim().substring(0, 100) || ''
        }))
      
      // –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const images = Array.from(document.querySelectorAll('img'))
        .map(img => ({
          src: img.src,
          alt: img.alt,
          className: img.className
        }))
        .slice(0, 10)
      
      // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Ü–µ–Ω–∞–º–∏
      const priceElements = Array.from(allElements)
        .filter(el => {
          const text = el.textContent?.trim() || ''
          return /\d+.*–¥—Ä–∞–º|AMD|\d+.*‚ÇΩ|\$\d+/.test(text)
        })
        .slice(0, 10)
        .map(el => ({
          tagName: el.tagName,
          className: el.className,
          text: el.textContent?.trim() || ''
        }))
      
      return {
        title,
        url,
        bodyTextLength: bodyText.length,
        textElements,
        images,
        priceElements
      }
    })
    
    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:')
    console.log(`  –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${pageInfo.title}`)
    console.log(`  URL: ${pageInfo.url}`)
    console.log(`  –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: ${pageInfo.bodyTextLength} —Å–∏–º–≤–æ–ª–æ–≤`)
    console.log(`  –ù–∞–π–¥–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${pageInfo.textElements.length}`)
    console.log(`  –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${pageInfo.images.length}`)
    console.log(`  –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —Ü–µ–Ω–∞–º–∏: ${pageInfo.priceElements.length}`)
    
    console.log('\nüìù –ü–µ—Ä–≤—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:')
    pageInfo.textElements.forEach((el, i) => {
      console.log(`  ${i + 1}. <${el.tagName}> class="${el.className}"`)
      console.log(`     –¢–µ–∫—Å—Ç: ${el.text}`)
    })
    
    console.log('\nüí∞ –≠–ª–µ–º–µ–Ω—Ç—ã —Å —Ü–µ–Ω–∞–º–∏:')
    pageInfo.priceElements.forEach((el, i) => {
      console.log(`  ${i + 1}. <${el.tagName}> class="${el.className}"`)
      console.log(`     –¢–µ–∫—Å—Ç: ${el.text}`)
    })
    
    console.log('\nüñºÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:')
    pageInfo.images.forEach((img, i) => {
      console.log(`  ${i + 1}. src="${img.src}"`)
      console.log(`     alt="${img.alt}" class="${img.className}"`)
    })
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    const testProducts = []
    
    if (pageInfo.priceElements.length > 0) {
      pageInfo.priceElements.forEach((el, i) => {
        const priceMatch = el.text.match(/\d+/)
        const price = priceMatch ? parseInt(priceMatch[0]) : 2000 + (i * 500)
        
        testProducts.push({
          name: `–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç ${i + 1}`,
          description: el.text,
          price: price,
          image: pageInfo.images[i]?.src || '',
          category: '–¢–µ—Å—Ç–æ–≤—ã–µ',
          ingredients: ['–¢–µ—Å—Ç–æ–≤—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'],
          isAvailable: true,
          source: 'buy.am'
        })
      })
    } else {
      // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
      for (let i = 0; i < 5; i++) {
        testProducts.push({
          name: `–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç ${i + 1}`,
          description: `–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ ${i + 1}`,
          price: 2000 + (i * 500),
          image: '',
          category: '–¢–µ—Å—Ç–æ–≤—ã–µ',
          ingredients: ['–¢–µ—Å—Ç–æ–≤—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'],
          isAvailable: true,
          source: 'buy.am'
        })
      }
    }
    
    console.log(`\n‚úÖ –°–æ–∑–¥–∞–Ω–æ ${testProducts.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤`)
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    const fs = await import('fs')
    const path = await import('path')
    
    const dataDir = path.join(process.cwd(), 'data')
    if (!fs.existsSync(dataDir)) {
      fs.mkdirSync(dataDir, { recursive: true })
    }
    
    const jsonPath = path.join(dataDir, 'buy-am-products.json')
    fs.writeFileSync(jsonPath, JSON.stringify(testProducts, null, 2), 'utf8')
    
    console.log(`üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${jsonPath}`)
    
    return testProducts
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ:', error)
    return []
  } finally {
    await browser.close()
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
simpleParse().then(products => {
  console.log(`\nüéâ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω! –°–æ–∑–¥–∞–Ω–æ ${products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤`)
  process.exit(0)
}).catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
  process.exit(1)
})
