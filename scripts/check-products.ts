import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkProducts() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
    
    const products = await prisma.product.findMany({
      select: {
        id: true,
        name: true,
        price: true,
        isAvailable: true
      }
    })
    
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${products.length}`)
    
    if (products.length === 0) {
      console.log('‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤!')
      return
    }
    
    console.log('üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:')
    products.forEach((product, index) => {
      console.log(`${index + 1}. ${product.name} (ID: ${product.id}) - ${product.price} ÷è - ${product.isAvailable ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}`)
    })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    const availableProducts = products.filter(p => p.isAvailable)
    console.log(`\n‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${availableProducts.length}`)
    
    if (availableProducts.length === 0) {
      console.log('‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤!')
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkProducts()