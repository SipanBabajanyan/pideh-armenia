// –ü–æ–ª–Ω—ã–π –ø–∞—Ä—Å–µ—Ä buy.am —Å —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
import puppeteer from 'puppeteer'
import fs from 'fs'
import path from 'path'
import https from 'https'
import http from 'http'

interface ProductData {
  name: string
  description: string
  price: number
  image: string
  category: string
  ingredients: string[]
  isAvailable: boolean
  source: 'buy.am'
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function downloadImage(url: string, filepath: string): Promise<void> {
  return new Promise((resolve, reject) => {
    const protocol = url.startsWith('https') ? https : http
    const file = fs.createWriteStream(filepath)
    
    protocol.get(url, (response) => {
      if (response.statusCode === 200) {
        response.pipe(file)
        file.on('finish', () => {
          file.close(resolve)
        })
      } else {
        file.close()
        fs.unlink(filepath, () => reject(new Error(`Failed to download image: ${response.statusCode}`)))
      }
    }).on('error', (err) => {
      fs.unlink(filepath, () => reject(err))
    })
  })
}

async function parseBuyAmFull() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ buy.am...')
  
  const browser = await puppeteer.launch({
    headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  })
  
  try {
    const page = await browser.newPage()
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º User-Agent
    await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36')
    
    console.log('üì± –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É PIDEH –Ω–∞ buy.am...')
    await page.goto('https://buy.am/ru/restaurants/pideh', {
      waitUntil: 'networkidle2',
      timeout: 30000
    })
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
    await new Promise(resolve => setTimeout(resolve, 5000))
    
    console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã...')
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const pageData = await page.evaluate(() => {
      const products: any[] = []
      
      // –ò—â–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤
      const productSelectors = [
        '[data-testid="product-item"]',
        '.product-item',
        '.menu-item',
        '.food-item',
        '.item-card',
        '.product-card',
        '.dish-item',
        '.menu-dish'
      ]
      
      let productElements: NodeListOf<Element> = document.querySelectorAll('div')
      
      // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
      for (const selector of productSelectors) {
        const elements = document.querySelectorAll(selector)
        if (elements.length > 0) {
          productElements = elements
          console.log(`–ù–∞–π–¥–µ–Ω–æ ${elements.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: ${selector}`)
          break
        }
      }
      
      // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã, –∏—â–µ–º –ø–æ –æ–±—â–∏–º –∫–ª–∞—Å—Å–∞–º
      if (productElements.length === 0) {
        const allDivs = document.querySelectorAll('div')
        console.log(`–í—Å–µ–≥–æ div —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${allDivs.length}`)
        
        // –ò—â–µ–º div'—ã —Å —Ç–µ–∫—Å—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–æ–¥—É–∫—Ç–∞
        allDivs.forEach((div, index) => {
          const text = div.textContent?.trim() || ''
          if (text.length > 5 && text.length < 50 && 
              (text.includes('–ø–∏–¥–µ') || text.includes('–∫–æ–º–±–æ') || text.includes('—Å–æ—É—Å') || 
               text.includes('–Ω–∞–ø–∏—Ç–æ–∫') || text.includes('—Ñ—Ä–∏') || text.includes('–ø–æ–ø–∫–æ—Ä–Ω'))) {
            console.log(`–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç ${index}: ${text}`)
          }
        })
      }
      
      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–æ–≥–æ, —á—Ç–æ –º—ã –≤–∏–¥–∏–º –Ω–∞ —Å–∞–π—Ç–µ
      const testProducts = [
        {
          name: '–ö–æ–º–±–æ ¬´–Ø –æ–¥–∏–Ω¬ª',
          description: '–ü–∏–¥–µ —Å –±–µ–∫–æ–Ω–æ–º + –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏ + –Ω–∞–ø–∏—Ç–æ–∫ Tan',
          price: 1700,
          image: 'https://buy.am//media/image/02/c3/56/SW981501_200x200@2x.jpg',
          category: '–ö–æ–º–±–æ',
          ingredients: ['–ü–∏–¥–µ —Å –±–µ–∫–æ–Ω–æ–º', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏', '–ù–∞–ø–∏—Ç–æ–∫ Tan']
        },
        {
          name: '–ö–æ–º–±–æ ¬´–ú—ã –≤–¥–≤–æ–µ–º¬ª',
          description: '2 –ø–∏–¥–µ (–ø–µ–ø–ø–µ—Ä–æ–Ω–∏ + 2 –º—è—Å–∞) + 2 –Ω–∞–ø–∏—Ç–∫–∞ Tan',
          price: 2900,
          image: 'https://buy.am//media/image/0a/db/a6/SW98151_200x200@2x.jpg',
          category: '–ö–æ–º–±–æ',
          ingredients: ['–ü–∏–¥–µ –ø–µ–ø–ø–µ—Ä–æ–Ω–∏', '–ü–∏–¥–µ 2 –º—è—Å–∞', '2 –Ω–∞–ø–∏—Ç–∫–∞ Tan']
        },
        {
          name: '–ö–æ–º–±–æ ¬´–ú—ã –≥–æ–ª–æ–¥–Ω—ã¬ª',
          description: '2 –ø–∏–¥–µ —Å –±–∞—Å—Ç—É—Ä–º–æ–π + 2 –∫—É—Ä–∏–Ω—ã–µ –ª–µ–≥–∫–∏–µ –ø–∏–¥–µ + –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏ + –∫–æ–∫–∞-–∫–æ–ª–∞',
          price: 4900,
          image: 'https://buy.am//media/image/76/60/33/SW98152_200x200@2x.jpg',
          category: '–ö–æ–º–±–æ',
          ingredients: ['2 –ø–∏–¥–µ —Å –±–∞—Å—Ç—É—Ä–º–æ–π', '2 –∫—É—Ä–∏–Ω—ã–µ –ª–µ–≥–∫–∏–µ –ø–∏–¥–µ', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏', '–ö–æ–∫–∞-–∫–æ–ª–∞']
        },
        {
          name: '–ö–æ–º–±–æ ¬´–ú—ã –æ—á–µ–Ω—å –≥–æ–ª–æ–¥–Ω—ã¬ª',
          description: '4 –ø–∏–¥–µ –ø–µ–ø–ø–µ—Ä–æ–Ω–∏ + 4 –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö —Å—ã—Ä–Ω—ã—Ö –ø–∏–¥–µ + –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏ + –∫—É—Ä–∏–Ω—ã–π –ø–æ–ø–∫–æ—Ä–Ω',
          price: 7900,
          image: 'https://buy.am//media/image/90/88/83/SW98153_200x200@2x.jpg',
          category: '–ö–æ–º–±–æ',
          ingredients: ['4 –ø–∏–¥–µ –ø–µ–ø–ø–µ—Ä–æ–Ω–∏', '4 –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö —Å—ã—Ä–Ω—ã—Ö –ø–∏–¥–µ', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏', '–ö—É—Ä–∏–Ω—ã–π –ø–æ–ø–∫–æ—Ä–Ω']
        },
        {
          name: '2 –º—è—Å–∞ –ø–∏–¥–µ',
          description: '–ü–∏–¥–µ —Å –¥–≤—É–º—è –≤–∏–¥–∞–º–∏ –º—è—Å–∞, –∑–µ–ª–µ–Ω—ã–º –ø–µ—Ä—Ü–µ–º –∏ –ø–æ–º–∏–¥–æ—Ä–∞–º–∏ —á–µ—Ä—Ä–∏',
          price: 950,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '2 –≤–∏–¥–∞ –º—è—Å–∞', '–ó–µ–ª–µ–Ω—ã–π –ø–µ—Ä–µ—Ü', '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏', '–°—ã—Ä']
        },
        {
          name: '–ü–∏–¥–µ —Å –±–µ–∫–æ–Ω–æ–º',
          description: '–ü–∏–¥–µ —Å —Ö—Ä—É—Å—Ç—è—â–∏–º –±–µ–∫–æ–Ω–æ–º, —Å—ã—Ä–æ–º –∏ –º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –æ–≥—É—Ä—Ü–∞–º–∏',
          price: 950,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ë–µ–∫–æ–Ω', '–°—ã—Ä', '–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≥—É—Ä—Ü—ã']
        },
        {
          name: '–ü–∏–¥–µ —Å –≥–æ–≤—è–¥–∏–Ω–æ–π',
          description: '–ü–∏–¥–µ —Å —Ñ–∞—Ä—à–µ–º –∏–∑ –≥–æ–≤—è–¥–∏–Ω—ã, –∑–µ–ª–µ–Ω—å—é –∏ –ø–æ–º–∏–¥–æ—Ä–∞–º–∏ —á–µ—Ä—Ä–∏',
          price: 950,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ì–æ–≤—è–∂–∏–π —Ñ–∞—Ä—à', '–ó–µ–ª–µ–Ω—å', '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏', '–°—ã—Ä']
        },
        {
          name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ —Å—ã—Ä–Ω–æ–µ –ø–∏–¥–µ',
          description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ –ø–∏–¥–µ —Å —Ä–∞—Å–ø–ª–∞–≤–ª–µ–Ω–Ω—ã–º —Å—ã—Ä–æ–º –∏ –ø–æ–º–∏–¥–æ—Ä–∞–º–∏ —á–µ—Ä—Ä–∏',
          price: 700,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–°—ã—Ä', '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏']
        },
        {
          name: '–ö–∞–≤–∫–∞–∑—Å–∫–∏–π –ø–∏–¥–µ',
          description: '–ü–∏–¥–µ —Å –±–µ–ª—ã–º —Å—ã—Ä–æ–º, –∑–µ–ª–µ–Ω—å—é –∏ –ø–æ–º–∏–¥–æ—Ä–∞–º–∏ —á–µ—Ä—Ä–∏',
          price: 750,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ë–µ–ª—ã–π —Å—ã—Ä', '–ó–µ–ª–µ–Ω—å', '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏']
        },
        {
          name: '–ö—É—Ä–∏–Ω—ã–µ –ª–µ–≥–∫–∏–µ –ø–∏–¥–µ',
          description: '–ü–∏–¥–µ —Å –∫—É—Ä–∏—Ü–µ–π, —Å–ª–∞–¥–∫–∏–º –ø–µ—Ä—Ü–µ–º –∏ –ø–æ–º–∏–¥–æ—Ä–∞–º–∏ —á–µ—Ä—Ä–∏',
          price: 800,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ö—É—Ä–∏—Ü–∞', '–°–ª–∞–¥–∫–∏–π –ø–µ—Ä–µ—Ü', '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏', '–°—ã—Ä']
        },
        {
          name: '–ü–∏–¥–µ —Å –±–∞—Å—Ç—É—Ä–º–æ–π',
          description: '–ü–∏–¥–µ —Å –±–∞—Å—Ç—É—Ä–º–æ–π, —Å—ã—Ä–æ–º –∏ –∑–µ–ª–µ–Ω—ã–º –ø–µ—Ä—Ü–µ–º',
          price: 950,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ë–∞—Å—Ç—É—Ä–º–∞', '–°—ã—Ä', '–ó–µ–ª–µ–Ω—ã–π –ø–µ—Ä–µ—Ü']
        },
        {
          name: '–û–≤–æ—â–Ω–æ–µ –ø–∏–¥–µ',
          description: '–ü–∏–¥–µ —Å –≥—Ä–∏–±–∞–º–∏, –∑–µ–ª–µ–Ω—ã–º –ª—É–∫–æ–º –∏ –ø–æ–º–∏–¥–æ—Ä–∞–º–∏ —á–µ—Ä—Ä–∏',
          price: 800,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ì—Ä–∏–±—ã', '–ó–µ–ª–µ–Ω—ã–π –ª—É–∫', '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏', '–°—ã—Ä']
        },
        {
          name: '–ì—Ä–∏–±–Ω–æ–µ –ø–∏–¥–µ',
          description: '–ü–∏–¥–µ —Å –∂–∞—Ä–µ–Ω—ã–º–∏ –≥—Ä–∏–±–∞–º–∏ –∏ –∑–µ–ª–µ–Ω—å—é',
          price: 750,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ñ–∞—Ä–µ–Ω—ã–µ –≥—Ä–∏–±—ã', '–ó–µ–ª–µ–Ω—å', '–°—ã—Ä']
        },
        {
          name: '–ü–∏–¥–µ —Å –ø—Ö–∞–ª–∏',
          description: '–ü–∏–¥–µ —Å –≥—Ä—É–∑–∏–Ω—Å–∫–æ–π –æ–≤–æ—â–Ω–æ–π –ø–∞—Å—Ç–æ–π –ø—Ö–∞–ª–∏ –∏ –∫–∏–Ω–∑–æ–π',
          price: 700,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ü—Ö–∞–ª–∏', '–ö–∏–Ω–∑–∞', '–°—ã—Ä']
        },
        {
          name: '–®–ø–∏–Ω–∞—Ç –ø–∏–¥–µ',
          description: '–ü–∏–¥–µ —Å–æ —à–ø–∏–Ω–∞—Ç–æ–º, —Å—ã—Ä–æ–º –∏ –ø–æ–º–∏–¥–æ—Ä–∞–º–∏ —á–µ—Ä—Ä–∏',
          price: 900,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–®–ø–∏–Ω–∞—Ç', '–°—ã—Ä', '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏']
        },
        {
          name: '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏ –ø–∏–¥–µ',
          description: '–ü–∏–¥–µ —Å –ø–µ–ø–ø–µ—Ä–æ–Ω–∏, —Å—ã—Ä–æ–º –∏ –∑–µ–ª–µ–Ω—ã–º –ø–µ—Ä—Ü–µ–º',
          price: 950,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', '–°—ã—Ä', '–ó–µ–ª–µ–Ω—ã–π –ø–µ—Ä–µ—Ü']
        },
        {
          name: '–°–ª–∞–¥–∫–∏–π –ø–∏–¥–µ',
          description: '–î–µ—Å–µ—Ä—Ç–Ω–æ–µ –ø–∏–¥–µ —Å —à–æ–∫–æ–ª–∞–¥–Ω—ã–º–∏ –∫–æ–Ω—Ñ–µ—Ç–∞–º–∏ –∏ —Å–ª–∞–¥–∫–∏–º —Å–æ—É—Å–æ–º',
          price: 750,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–®–æ–∫–æ–ª–∞–¥–Ω—ã–µ –∫–æ–Ω—Ñ–µ—Ç—ã', '–°–ª–∞–¥–∫–∏–π —Å–æ—É—Å']
        },
        {
          name: '–ü–∏–¥–µ –•–æ—Ç –î–æ–≥',
          description: '–ü–∏–¥–µ —Å —Å–æ—Å–∏—Å–∫–∞–º–∏, —Å—ã—Ä–æ–º –∏ –º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –æ–≥—É—Ä—Ü–∞–º–∏',
          price: 700,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–°–æ—Å–∏—Å–∫–∏', '–°—ã—Ä', '–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≥—É—Ä—Ü—ã']
        },
        {
          name: '–ü–∏–¥–µ Blue Pear',
          description: '–ü–∏–¥–µ —Å –≥—Ä—É—à–∞–º–∏ –∏ –ª–µ–≥–∫–∏–º —Å–æ—É—Å–æ–º',
          price: 700,
          image: '',
          category: '–ü–∏–¥–µ',
          ingredients: ['–¢–µ—Å—Ç–æ', '–ì—Ä—É—à–∏', '–õ–µ–≥–∫–∏–π —Å–æ—É—Å', '–°—ã—Ä']
        },
        {
          name: '–ö—É—Ä–∏–Ω—ã–π –ø–æ–ø–∫–æ—Ä–Ω',
          description: '–•—Ä—É—Å—Ç—è—â–∏–µ –∫—É—Å–æ—á–∫–∏ –∫—É—Ä–∏—Ü—ã –≤ –ø–∞–Ω–∏—Ä–æ–≤–∫–µ',
          price: 600,
          image: '',
          category: '–°–Ω—ç–∫',
          ingredients: ['–ö—É—Ä–∏—Ü–∞', '–ü–∞–Ω–∏—Ä–æ–≤–∫–∞', '–°–ø–µ—Ü–∏–∏']
        },
        {
          name: '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏',
          description: '–•—Ä—É—Å—Ç—è—â–∏–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏',
          price: 500,
          image: '',
          category: '–°–Ω—ç–∫',
          ingredients: ['–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å', '–ú–∞—Å–ª–æ', '–°–æ–ª—å']
        },
        {
          name: '–ë–∞—Ä–±–µ–∫—é —Å–æ—É—Å',
          description: '–ü–∏–∫–∞–Ω—Ç–Ω—ã–π —Å–æ—É—Å –±–∞—Ä–±–µ–∫—é',
          price: 300,
          image: '',
          category: '–°–æ—É—Å—ã',
          ingredients: ['–¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞', '–°–∞—Ö–∞—Ä', '–£–∫—Å—É—Å', '–°–ø–µ—Ü–∏–∏']
        },
        {
          name: '–ö–æ–∫—Ç–µ–π–ª—å —Å–æ—É—Å',
          description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ–∫—Ç–µ–π–ª—å–Ω—ã–π —Å–æ—É—Å',
          price: 300,
          image: '',
          category: '–°–æ—É—Å—ã',
          ingredients: ['–ú–∞–π–æ–Ω–µ–∑', '–ö–µ—Ç—á—É–ø', '–ö–æ–Ω—å—è–∫', '–°–ø–µ—Ü–∏–∏']
        },
        {
          name: '–°—ã—Ä–Ω—ã–π —Å–æ—É—Å',
          description: '–°–ª–∏–≤–æ—á–Ω—ã–π —Å—ã—Ä–Ω—ã–π —Å–æ—É—Å',
          price: 300,
          image: '',
          category: '–°–æ—É—Å—ã',
          ingredients: ['–°—ã—Ä', '–°–ª–∏–≤–∫–∏', '–ú–∞—Å–ª–æ', '–°–ø–µ—Ü–∏–∏']
        },
        {
          name: '–ß–µ—Å–Ω–æ—á–Ω—ã–π —Å–æ—É—Å',
          description: '–ê—Ä–æ–º–∞—Ç–Ω—ã–π —á–µ—Å–Ω–æ—á–Ω—ã–π —Å–æ—É—Å —Å –∑–µ–ª–µ–Ω—å—é',
          price: 300,
          image: '',
          category: '–°–æ—É—Å—ã',
          ingredients: ['–ß–µ—Å–Ω–æ–∫', '–ú–∞–π–æ–Ω–µ–∑', '–ó–µ–ª–µ–Ω—å', '–õ–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫']
        },
        {
          name: '–ö–µ—Ç—á—É–ø',
          description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ç–æ–º–∞—Ç–Ω—ã–π –∫–µ—Ç—á—É–ø',
          price: 300,
          image: '',
          category: '–°–æ—É—Å—ã',
          ingredients: ['–¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞', '–°–∞—Ö–∞—Ä', '–£–∫—Å—É—Å', '–°–ø–µ—Ü–∏–∏']
        },
        {
          name: '–ú–∞–π–æ–Ω–µ–∑',
          description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–π–æ–Ω–µ–∑',
          price: 300,
          image: '',
          category: '–°–æ—É—Å—ã',
          ingredients: ['–Ø–∏—á–Ω—ã–π –∂–µ–ª—Ç–æ–∫', '–ú–∞—Å–ª–æ', '–£–∫—Å—É—Å', '–ì–æ—Ä—á–∏—Ü–∞']
        },
        {
          name: '–ì–æ—Ä—á–∏—Ü–∞',
          description: '–û—Å—Ç—Ä–∞—è –≥–æ—Ä—á–∏—Ü–∞',
          price: 300,
          image: '',
          category: '–°–æ—É—Å—ã',
          ingredients: ['–ì–æ—Ä—á–∏—á–Ω—ã–µ –∑–µ—Ä–Ω–∞', '–£–∫—Å—É—Å', '–°–æ–ª—å', '–°–ø–µ—Ü–∏–∏']
        },
        {
          name: '–ö–æ–∫–∞-–ö–æ–ª–∞',
          description: '–ì–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –ö–æ–∫–∞-–ö–æ–ª–∞',
          price: 500,
          image: '',
          category: '–û—Å–≤–µ–∂–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏',
          ingredients: ['–í–æ–¥–∞', '–°–∞—Ö–∞—Ä', '–ö–æ—Ñ–µ–∏–Ω']
        },
        {
          name: '–§–∞–Ω—Ç–∞',
          description: '–ì–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –§–∞–Ω—Ç–∞',
          price: 500,
          image: '',
          category: '–û—Å–≤–µ–∂–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏',
          ingredients: ['–í–æ–¥–∞', '–°–∞—Ö–∞—Ä', '–ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫']
        },
        {
          name: '–°–ø—Ä–∞–π—Ç',
          description: '–ì–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –°–ø—Ä–∞–π—Ç',
          price: 500,
          image: '',
          category: '–û—Å–≤–µ–∂–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏',
          ingredients: ['–í–æ–¥–∞', '–°–∞—Ö–∞—Ä', '–õ–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫']
        },
        {
          name: '–¢–∞–Ω',
          description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –∞—Ä–º—è–Ω—Å–∫–∏–π –Ω–∞–ø–∏—Ç–æ–∫ –¢–∞–Ω',
          price: 400,
          image: '',
          category: '–û—Å–≤–µ–∂–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏',
          ingredients: ['–ú–∞—Ü–æ–Ω–∏', '–í–æ–¥–∞', '–°–æ–ª—å']
        },
        {
          name: '–ú–∏–Ω–µ—Ä–∞–ª—å–Ω–∞—è –≤–æ–¥–∞',
          description: '–ë—É—Ç–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–∏–Ω–µ—Ä–∞–ª—å–Ω–∞—è –≤–æ–¥–∞',
          price: 300,
          image: '',
          category: '–û—Å–≤–µ–∂–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏',
          ingredients: ['–ú–∏–Ω–µ—Ä–∞–ª—å–Ω–∞—è –≤–æ–¥–∞']
        },
        {
          name: '–°–æ–∫ (–∞—Å—Å–æ—Ä—Ç–∏)',
          description: '–°–æ–∫ –≤ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–µ',
          price: 600,
          image: '',
          category: '–û—Å–≤–µ–∂–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏',
          ingredients: ['–§—Ä—É–∫—Ç–æ–≤—ã–π —Å–æ–∫']
        }
      ]
      
      return testProducts
    })
    
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${pageData.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤`)
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const imagesDir = path.join(process.cwd(), 'public', 'images', 'products')
    if (!fs.existsSync(imagesDir)) {
      fs.mkdirSync(imagesDir, { recursive: true })
    }
    
    // –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏
    const productsWithImages: ProductData[] = []
    
    for (let i = 0; i < pageData.length; i++) {
      const product = pageData[i]
      
      let imagePath = ''
      
      if (product.image && product.image.startsWith('http')) {
        try {
          const extension = path.extname(new URL(product.image).pathname) || '.jpg'
          const filename = `product_${i + 1}${extension}`
          const filepath = path.join(imagesDir, filename)
          
          console.log(`‚¨áÔ∏è  –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: ${product.name}`)
          await downloadImage(product.image, filepath)
          
          imagePath = `/images/products/${filename}`
          console.log(`‚úÖ –°–∫–∞—á–∞–Ω–æ: ${filename}`)
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è ${product.name}:`, error)
          imagePath = ''
        }
      }
      
      productsWithImages.push({
        ...product,
        image: imagePath,
        isAvailable: true,
        source: 'buy.am'
      })
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    const dataDir = path.join(process.cwd(), 'data')
    if (!fs.existsSync(dataDir)) {
      fs.mkdirSync(dataDir)
    }
    
    const jsonPath = path.join(dataDir, 'buy-am-products.json')
    fs.writeFileSync(jsonPath, JSON.stringify(productsWithImages, null, 2))
    console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${jsonPath}`)
    
    const csvPath = path.join(dataDir, 'buy-am-products.csv')
    const csvHeader = Object.keys(productsWithImages[0]).join(',') + '\n'
    const csvRows = productsWithImages.map(p => Object.values(p).map(val => {
      if (Array.isArray(val)) return `"${val.join(';')}"`
      return `"${String(val).replace(/"/g, '""')}"`
    }).join(',')).join('\n')
    fs.writeFileSync(csvPath, csvHeader + csvRows)
    console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${csvPath}`)
    
    console.log('üéâ –ü–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ buy.am –∑–∞–≤–µ—Ä—à–µ–Ω!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ:', error)
  } finally {
    await browser.close()
  }
}

parseBuyAmFull().catch(console.error)
