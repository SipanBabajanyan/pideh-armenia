import { PrismaClient } from '@prisma/client'
import { sampleProducts } from '../src/constants/products'

const prisma = new PrismaClient()

async function updateProducts() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã
    await prisma.product.deleteMany({})
    console.log('‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã —É–¥–∞–ª–µ–Ω—ã')
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
    for (const product of sampleProducts) {
      await prisma.product.create({
        data: {
          ...product,
          ingredients: product.ingredients || []
        }
      })
    }
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${sampleProducts.length} —Ç–æ–≤–∞—Ä–æ–≤`)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const stats = await prisma.product.groupBy({
      by: ['category'],
      _count: {
        category: true
      }
    })
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:')
    stats.forEach(stat => {
      console.log(`  ${stat.category}: ${stat._count.category} —Ç–æ–≤–∞—Ä–æ–≤`)
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

updateProducts()
