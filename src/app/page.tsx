'use client'

import Image from "next/image";
import Link from "next/link";
import { Phone, MapPin, Clock, ShoppingCart } from "lucide-react";
import { useState, useEffect } from "react";
import { useCart } from "@/hooks/useCart";
import { Product } from "@/types";
import Header from "@/components/Header";
import Footer from "@/components/Footer";

export default function Home() {
  const [products, setProducts] = useState<Product[]>([])
  const [comboProducts, setComboProducts] = useState<Product[]>([])
  const [loading, setLoading] = useState(true)
  const [activeCategory, setActiveCategory] = useState('–ö–æ–º–±–æ')
  const [addedToCart, setAddedToCart] = useState<Set<string>>(new Set())
  const { addItem } = useCart()

  useEffect(() => {
    fetchProducts()
  }, [])

  const fetchProducts = async () => {
    try {
      const response = await fetch('/api/products')
      const data = await response.json()
      setProducts(data)
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–æ–º–±–æ —Ç–æ–≤–∞—Ä—ã –¥–ª—è —Å–µ–∫—Ü–∏–∏ —Ö–∏—Ç–æ–≤
      const combos = data.filter((product: Product) => product.category === '–ö–æ–º–±–æ')
      setComboProducts(combos.slice(0, 4)) // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 4 –∫–æ–º–±–æ
    } catch (error) {
      console.error('Error fetching products:', error)
    } finally {
      setLoading(false)
    }
  }

  const handleAddToCart = (product: Product) => {
    addItem(product, 1)
    setAddedToCart(prev => new Set(prev).add(product.id))
    
    // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      setAddedToCart(prev => {
        const newSet = new Set(prev)
        newSet.delete(product.id)
        return newSet
      })
    }, 2000)
  }

  const getFilteredProducts = () => {
    return products.filter(product => product.category === activeCategory)
  }

  const isPopularProduct = (product: Product) => {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –¥—Ä—É–≥–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º
    const popularNames = ['–ú—è—Å–Ω–∞—è –ø–∏–¥–µ', '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏ –ø–∏–¥–µ', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å—ã—Ä–Ω–∞—è –ø–∏–¥–µ', '–ì—Ä–∏–±–Ω–∞—è –ø–∏–¥–µ']
    return popularNames.some(name => product.name.toLowerCase().includes(name.toLowerCase()))
  }

  const categories = ['–ö–æ–º–±–æ', '–ü–∏–¥–µ', '–û—Å–≤–µ–∂–∞—é—â–∏–µ –Ω–∞–ø–∏—Ç–∫–∏', '–°–æ—É—Å—ã', '–°–Ω—ç–∫']

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />

      {/* Hero Section */}
      <section className="relative bg-orange-500 text-white overflow-hidden">
        {/* Animated background elements */}
        <div className="absolute inset-0">
          <div className="absolute top-10 left-10 w-20 h-20 bg-white/10 rounded-full animate-pulse"></div>
          <div className="absolute top-32 right-20 w-16 h-16 bg-yellow-200/20 rounded-full animate-bounce"></div>
          <div className="absolute bottom-20 left-1/4 w-12 h-12 bg-white/15 rounded-full animate-ping"></div>
          <div className="absolute bottom-32 right-1/3 w-8 h-8 bg-yellow-300/30 rounded-full animate-pulse"></div>
        </div>
        
        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 lg:py-32">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-16 items-center">
            {/* Left content */}
            <div className="space-y-8">
              {/* Badge */}
              <div className="inline-flex items-center px-4 py-2 bg-white/20 backdrop-blur-sm rounded-full text-sm font-medium animate-fade-in">
                <span className="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></span>
                –°–≤–µ–∂–∏–µ –ø–∏–¥–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
              </div>
              
              {/* Main heading */}
              <h1 className="text-5xl md:text-7xl font-bold leading-tight">
                <span className="block text-white animate-slide-up">–ê—Ä–º—è–Ω—Å–∫–∏–µ</span>
                <span className="block text-yellow-200 animate-slide-up-delay">–ø–∏–¥–µ</span>
                <span className="block text-3xl md:text-4xl font-normal text-orange-100 mt-4 animate-fade-in-delay">
                  –Ω–æ–≤—ã–π –≤–∫—É—Å
                </span>
              </h1>
              
              {/* Description */}
              <p className="text-xl md:text-2xl text-orange-100 leading-relaxed max-w-lg animate-fade-in-delay-2">
                –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –Ω–∞—á–∏–Ω–∫–∞–º–∏. 
                <span className="font-semibold text-yellow-200"> 15 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∫—É—Å–æ–≤</span> –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –≥—É—Ä–º–∞–Ω–æ–≤!
              </p>
              
              {/* Stats */}
              <div className="flex flex-wrap gap-8 animate-fade-in-delay-3">
                <div className="text-center">
                  <div className="text-3xl font-bold text-yellow-200">15+</div>
                  <div className="text-sm text-orange-100">–í–∫—É—Å–æ–≤</div>
                </div>
                <div className="text-center">
                  <div className="text-3xl font-bold text-yellow-200">20</div>
                  <div className="text-sm text-orange-100">–ú–∏–Ω—É—Ç</div>
                </div>
                <div className="text-center">
                  <div className="text-3xl font-bold text-yellow-200">24/7</div>
                  <div className="text-sm text-orange-100">–î–æ—Å—Ç–∞–≤–∫–∞</div>
                </div>
              </div>
              
              {/* CTA Buttons */}
              <div className="flex flex-col sm:flex-row gap-4 animate-fade-in-delay-4">
                <Link 
                  href="/products"
                  className="group bg-white text-orange-500 px-8 py-4 rounded-xl font-bold text-lg hover:bg-yellow-100 hover:scale-105 transition-all duration-300 text-center shadow-lg hover:shadow-xl"
                >
                  <span className="flex items-center justify-center">
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é
                    <svg className="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                    </svg>
                  </span>
                </Link>
                <Link 
                  href="/contact"
                  className="group border-2 border-white text-white px-8 py-4 rounded-xl font-bold text-lg hover:bg-white hover:text-orange-500 hover:scale-105 transition-all duration-300 text-center backdrop-blur-sm"
                >
                  <span className="flex items-center justify-center">
                    <Phone className="mr-2 w-5 h-5 group-hover:rotate-12 transition-transform" />
                  –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
                  </span>
                </Link>
              </div>
            </div>
            
            {/* Right content - Product showcase */}
            <div className="relative animate-fade-in-delay-5">
              {/* Main product card */}
              <div className="relative bg-white/10 backdrop-blur-lg rounded-3xl p-8 text-center border border-white/20 shadow-2xl">
                {/* Floating elements */}
                <div className="absolute -top-4 -right-4 w-8 h-8 bg-yellow-300 rounded-full animate-bounce"></div>
                <div className="absolute -bottom-2 -left-2 w-6 h-6 bg-orange-300 rounded-full animate-pulse"></div>
                
                {/* Product image */}
                <div className="relative w-64 h-64 mx-auto mb-6 bg-white/20 rounded-2xl flex items-center justify-center overflow-hidden group">
                  <img 
                    src="/images/2-myasa-pide.jpg" 
                    alt="–ê—Ä–º—è–Ω—Å–∫–∏–µ –ø–∏–¥–µ"
                    className="w-full h-full object-cover rounded-2xl group-hover:scale-110 transition-transform duration-500"
                    onError={(e) => {
                      e.currentTarget.style.display = 'none';
                      const nextElement = e.currentTarget.nextElementSibling as HTMLElement;
                      if (nextElement) {
                        nextElement.style.display = 'flex';
                      }
                    }}
                  />
                  <div 
                    className="w-full h-full flex items-center justify-center text-8xl"
                    style={{ display: 'none' }}
                  >
                    ü•ü
                  </div>
                  
                  {/* Price badge */}
                  <div className="absolute -top-2 -right-2 bg-yellow-400 text-orange-800 px-3 py-1 rounded-full text-sm font-bold">
                    –æ—Ç 1500 ÷è
                  </div>
                </div>
                
                <h3 className="text-2xl font-bold mb-2">–°–≤–µ–∂–∏–µ –ø–∏–¥–µ</h3>
                <p className="text-orange-100 mb-4">–ì–æ—Ç–æ–≤–∏–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å –ª—é–±–æ–≤—å—é</p>
                
                {/* Quick action */}
                <button
                  onClick={() => handleAddToCart(products[0] || { id: '1', name: '–ú—è—Å–Ω–∞—è –ø–∏–¥–µ', price: 1500, category: '–ü–∏–¥–µ' })}
                  className="bg-yellow-400 text-orange-800 px-6 py-3 rounded-xl font-bold hover:bg-yellow-300 hover:scale-105 transition-all duration-300 shadow-lg"
                >
                  <ShoppingCart className="inline w-5 h-5 mr-2" />
                  –ë—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑
                </button>
              </div>
              
              {/* Floating mini cards */}
              <div className="absolute -top-4 -left-4 bg-white/20 backdrop-blur-sm rounded-xl p-3 text-center border border-white/30 animate-float">
                <div className="w-12 h-12 bg-white/30 rounded-lg flex items-center justify-center mb-2">
                  <span className="text-2xl">üçï</span>
                </div>
                <div className="text-xs font-semibold">15+ –≤–∫—É—Å–æ–≤</div>
              </div>
              
              <div className="absolute -bottom-4 -right-4 bg-white/20 backdrop-blur-sm rounded-xl p-3 text-center border border-white/30 animate-float-delay">
                <div className="w-12 h-12 bg-white/30 rounded-lg flex items-center justify-center mb-2">
                  <span className="text-2xl">üöö</span>
                </div>
                <div className="text-xs font-semibold">–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Products Showcase Section - Moved up */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* Section header */}
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              –ù–∞—à–µ –º–µ–Ω—é
            </h2>
            {!loading && (
              <p className="text-lg text-orange-600 font-semibold mb-8">
                –ü–æ–∫–∞–∑–∞–Ω–æ {getFilteredProducts().length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{activeCategory}"
              </p>
            )}
            
            {/* Category tabs */}
            <div className="flex flex-wrap justify-center gap-4 mb-12">
              {categories.map((category) => (
                <button
                  key={category}
                  onClick={() => setActiveCategory(category)}
                  className={`px-6 py-3 rounded-full font-semibold transition-all duration-300 hover:scale-105 ${
                    activeCategory === category
                      ? 'bg-orange-500 text-white shadow-lg'
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  {category}
                </button>
              ))}
            </div>
          </div>

          {/* Products grid */}
          {loading ? (
            <div className="flex justify-center py-20">
              <div className="flex flex-col items-center space-y-4">
                <div className="animate-spin rounded-full h-16 w-16 border-4 border-orange-500 border-t-transparent"></div>
                <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é...</p>
              </div>
            </div>
          ) : getFilteredProducts().length === 0 ? (
            <div className="text-center py-20">
              <div className="text-6xl mb-4">üçΩÔ∏è</div>
              <h3 className="text-2xl font-bold text-gray-900 mb-2">
                –¢–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{activeCategory}" —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è
              </h3>
              <p className="text-gray-600 mb-6">
                –ü–æ–∫–∞ —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥—Ä—É–≥–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
              </p>
              <button
                onClick={() => setActiveCategory('–ö–æ–º–±–æ')}
                className="bg-orange-500 text-white px-6 py-3 rounded-xl font-semibold hover:bg-orange-600 transition-colors"
              >
                –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–±–æ
              </button>
            </div>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
              {getFilteredProducts().map((product, index) => (
                <div 
                  key={product.id} 
                  className="group bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 border border-gray-100"
                  style={{ animationDelay: `${index * 0.1}s` }}
                >
                  {/* Product image */}
                  <div className="relative h-56 bg-orange-50 flex items-center justify-center overflow-hidden">
                    {product.image ? (
                      <img 
                        src={product.image} 
                        alt={product.name}
                        className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                        onError={(e) => {
                          e.currentTarget.style.display = 'none';
                          const nextElement = e.currentTarget.nextElementSibling as HTMLElement;
                          if (nextElement) {
                            nextElement.style.display = 'flex';
                          }
                        }}
                      />
                    ) : null}
                    <div 
                      className="w-full h-full flex items-center justify-center text-8xl opacity-60 group-hover:opacity-80 transition-opacity duration-300"
                      style={{ display: product.image ? 'none' : 'flex' }}
                    >
                      ü•ü
                    </div>
                    
                    {/* Badge - —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ */}
                    {isPopularProduct(product) && (
                      <div className="absolute top-4 left-4 bg-orange-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                        –ü–æ–ø—É–ª—è—Ä–Ω–æ–µ
                      </div>
                    )}
                    
                    {/* Quick add button */}
                    <button
                      onClick={() => handleAddToCart(product)}
                      className="absolute top-4 right-4 w-10 h-10 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 hover:bg-orange-500 hover:text-white"
                    >
                      <ShoppingCart className="h-5 w-5" />
                    </button>
                  </div>
                  
                  {/* Product info */}
                  <div className="p-6">
                    <h3 className="text-xl font-bold text-gray-900 mb-4 group-hover:text-orange-600 transition-colors duration-200">
                      {product.name}
                    </h3>
                    
                    {/* Price and action */}
                    <div className="flex justify-between items-center">
                      <div>
                      <span className="text-2xl font-bold text-orange-500">{product.price} ÷è</span>
                      </div>
                      <button
                        onClick={() => handleAddToCart(product)}
                        className={`px-4 py-2 rounded-xl font-semibold transition-all duration-300 text-sm ${
                          addedToCart.has(product.id)
                            ? 'bg-green-500 text-white scale-105 shadow-lg'
                            : 'bg-orange-500 text-white hover:bg-orange-600 hover:scale-105'
                        }`}
                      >
                        {addedToCart.has(product.id) ? '‚úì –î–æ–±–∞–≤–ª–µ–Ω–æ!' : '–í –∫–æ—Ä–∑–∏–Ω—É'}
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          )}

          {/* CTA */}
          <div className="text-center mt-16">
            <Link 
              href="/products"
              className="group inline-flex items-center bg-orange-500 text-white px-8 py-4 rounded-2xl font-bold text-lg hover:bg-orange-600 transition-all duration-300 hover:scale-105 shadow-lg hover:shadow-xl"
            >
              <span>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –º–µ–Ω—é</span>
              <svg className="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
              </svg>
            </Link>
          </div>
        </div>
      </section>

      {/* Additional Pide Showcase Section - Moved up */}
      <section className="py-20 bg-orange-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* Section header */}
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—à–∏ —Ö–∏—Ç—ã
            </h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              –°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏ –≤–∫—É—Å–Ω—ã–µ –ø–∏–¥–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã
            </p>
          </div>

          {/* Featured products grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {/* Featured product 1 */}
            <div className="group bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-300 hover:-translate-y-2">
              <div className="relative h-64 bg-orange-100 flex items-center justify-center overflow-hidden">
                <img 
                  src="/images/pide-s-govyadinoj.jpg" 
                  alt="–ú—è—Å–Ω–∞—è –ø–∏–¥–µ"
                  className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                  onError={(e) => {
                    e.currentTarget.style.display = 'none';
                    const nextElement = e.currentTarget.nextElementSibling as HTMLElement;
                    if (nextElement) {
                      nextElement.style.display = 'flex';
                    }
                  }}
                />
                <div 
                  className="w-full h-full flex items-center justify-center text-8xl opacity-60 group-hover:opacity-80 transition-opacity duration-300"
                  style={{ display: 'none' }}
                >
                  ü•ü
                </div>
                
                {/* Special badge */}
                <div className="absolute top-4 left-4 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                  –•–ò–¢ –ü–†–û–î–ê–ñ
                </div>
                
                {/* Quick add button */}
                <button
                  onClick={() => handleAddToCart({ 
                    id: 'meat-pide', 
                    name: '–ú—è—Å–Ω–∞—è –ø–∏–¥–µ', 
                    price: 1800, 
                    category: '–ü–∏–¥–µ',
                    description: '–°–æ—á–Ω–∞—è –≥–æ–≤—è–¥–∏–Ω–∞, —Å–≤–µ–∂–∏–µ –æ–≤–æ—â–∏ –∏ –∞—Ä–æ–º–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∏',
                    image: '/images/2-myasa-pide.jpg',
                    ingredients: ['–ì–æ–≤—è–¥–∏–Ω–∞', '–û–≤–æ—â–∏', '–°–ø–µ—Ü–∏–∏'],
                    isAvailable: true,
                    createdAt: new Date(),
                    updatedAt: new Date()
                  })}
                  className="absolute top-4 right-4 w-10 h-10 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 hover:bg-orange-500 hover:text-white"
                >
                  <ShoppingCart className="h-5 w-5" />
                </button>
              </div>
              
              <div className="p-6">
                <h3 className="text-xl font-bold text-gray-900 mb-2 group-hover:text-orange-600 transition-colors duration-200">
                  –ú—è—Å–Ω–∞—è –ø–∏–¥–µ
                </h3>
                <p className="text-gray-600 text-sm mb-4">
                  –°–æ—á–Ω–∞—è –≥–æ–≤—è–¥–∏–Ω–∞, —Å–≤–µ–∂–∏–µ –æ–≤–æ—â–∏ –∏ –∞—Ä–æ–º–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∏ –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ
                </p>
                
                <div className="flex justify-between items-center">
                  <div>
                    <span className="text-2xl font-bold text-orange-500">1800 ÷è</span>
                    <span className="text-sm text-gray-500 ml-2">–∑–∞ –ø–æ—Ä—Ü–∏—é</span>
                  </div>
                  <Link 
                    href="/products/meat-pide"
                    className="bg-orange-500 text-white px-4 py-2 rounded-xl font-semibold hover:bg-orange-600 transition-colors text-sm"
                  >
                    –ó–∞–∫–∞–∑–∞—Ç—å
                  </Link>
                </div>
              </div>
            </div>

            {/* Featured product 2 */}
            <div className="group bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-300 hover:-translate-y-2">
              <div className="relative h-64 bg-orange-100 flex items-center justify-center overflow-hidden">
                <img 
                  src="/images/pepperoni-pide.jpg" 
                  alt="–ü–µ–ø–ø–µ—Ä–æ–Ω–∏ –ø–∏–¥–µ"
                  className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                  onError={(e) => {
                    e.currentTarget.style.display = 'none';
                    const nextElement = e.currentTarget.nextElementSibling as HTMLElement;
                    if (nextElement) {
                      nextElement.style.display = 'flex';
                    }
                  }}
                />
                <div 
                  className="w-full h-full flex items-center justify-center text-8xl opacity-60 group-hover:opacity-80 transition-opacity duration-300"
                  style={{ display: 'none' }}
                >
                  ü•ü
                </div>
                
                {/* Special badge */}
                <div className="absolute top-4 left-4 bg-green-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                  –ù–û–í–ò–ù–ö–ê
                </div>
                
                {/* Quick add button */}
                <button
                  onClick={() => handleAddToCart({ 
                    id: 'pepperoni-pide', 
                    name: '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏ –ø–∏–¥–µ', 
                    price: 1600, 
                    category: '–ü–∏–¥–µ',
                    description: '–û—Å—Ç—Ä–∞—è –∫–æ–ª–±–∞—Å–∞ –ø–µ–ø–ø–µ—Ä–æ–Ω–∏ —Å —Å—ã—Ä–æ–º –º–æ—Ü–∞—Ä–µ–ª–ª–∞',
                    image: '/images/pepperoni-pide.jpg',
                    ingredients: ['–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞', '–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å'],
                    isAvailable: true,
                    createdAt: new Date(),
                    updatedAt: new Date()
                  })}
                  className="absolute top-4 right-4 w-10 h-10 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 hover:bg-orange-500 hover:text-white"
                >
                  <ShoppingCart className="h-5 w-5" />
                </button>
              </div>
              
              <div className="p-6">
                <h3 className="text-xl font-bold text-gray-900 mb-2 group-hover:text-orange-600 transition-colors duration-200">
                  –ü–µ–ø–ø–µ—Ä–æ–Ω–∏ –ø–∏–¥–µ
                </h3>
                <p className="text-gray-600 text-sm mb-4">
                  –û—Å—Ç—Ä–∞—è –∫–æ–ª–±–∞—Å–∞ –ø–µ–ø–ø–µ—Ä–æ–Ω–∏ —Å —Å—ã—Ä–æ–º –º–æ—Ü–∞—Ä–µ–ª–ª–∞ –∏ —Ç–æ–º–∞—Ç–Ω—ã–º —Å–æ—É—Å–æ–º
                </p>
                
                <div className="flex justify-between items-center">
                  <div>
                    <span className="text-2xl font-bold text-orange-500">1600 ÷è</span>
                    <span className="text-sm text-gray-500 ml-2">–∑–∞ –ø–æ—Ä—Ü–∏—é</span>
                  </div>
                  <Link 
                    href="/products/pepperoni-pide"
                    className="bg-orange-500 text-white px-4 py-2 rounded-xl font-semibold hover:bg-orange-600 transition-colors text-sm"
                  >
                    –ó–∞–∫–∞–∑–∞—Ç—å
                  </Link>
                </div>
              </div>
            </div>

            {/* Featured product 3 */}
            <div className="group bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-300 hover:-translate-y-2">
              <div className="relative h-64 bg-orange-100 flex items-center justify-center overflow-hidden">
                <img 
                  src="/images/classic-chees.jpg" 
                  alt="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å—ã—Ä–Ω–∞—è –ø–∏–¥–µ"
                  className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                  onError={(e) => {
                    e.currentTarget.style.display = 'none';
                    const nextElement = e.currentTarget.nextElementSibling as HTMLElement;
                    if (nextElement) {
                      nextElement.style.display = 'flex';
                    }
                  }}
                />
                <div 
                  className="w-full h-full flex items-center justify-center text-8xl opacity-60 group-hover:opacity-80 transition-opacity duration-300"
                  style={{ display: 'none' }}
                >
                  ü•ü
                </div>
                
                {/* Special badge */}
                <div className="absolute top-4 left-4 bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                  –ö–õ–ê–°–°–ò–ö–ê
                </div>
                
                {/* Quick add button */}
                <button
                  onClick={() => handleAddToCart({ 
                    id: 'cheese-pide', 
                    name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å—ã—Ä–Ω–∞—è –ø–∏–¥–µ', 
                    price: 1400, 
                    category: '–ü–∏–¥–µ',
                    description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –ø–∏–¥–µ —Å —Ç—Ä–µ–º—è –≤–∏–¥–∞–º–∏ —Å—ã—Ä–∞',
                    image: '/images/classic-chees.jpg',
                    ingredients: ['–°—ã—Ä –º–æ—Ü–∞—Ä–µ–ª–ª–∞', '–°—ã—Ä —á–µ–¥–¥–µ—Ä', '–°—ã—Ä –ø–∞—Ä–º–µ–∑–∞–Ω'],
                    isAvailable: true,
                    createdAt: new Date(),
                    updatedAt: new Date()
                  })}
                  className="absolute top-4 right-4 w-10 h-10 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 hover:bg-orange-500 hover:text-white"
                >
                  <ShoppingCart className="h-5 w-5" />
                </button>
              </div>
              
              <div className="p-6">
                <h3 className="text-xl font-bold text-gray-900 mb-2 group-hover:text-orange-600 transition-colors duration-200">
                  –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å—ã—Ä–Ω–∞—è –ø–∏–¥–µ
                </h3>
                <p className="text-gray-600 text-sm mb-4">
                  –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –ø–∏–¥–µ —Å —Ç—Ä–µ–º—è –≤–∏–¥–∞–º–∏ —Å—ã—Ä–∞ –∏ —Å–≤–µ–∂–µ–π –∑–µ–ª–µ–Ω—å—é
                </p>
                
                <div className="flex justify-between items-center">
                  <div>
                    <span className="text-2xl font-bold text-orange-500">1400 ÷è</span>
                    <span className="text-sm text-gray-500 ml-2">–∑–∞ –ø–æ—Ä—Ü–∏—é</span>
                  </div>
                  <Link 
                    href="/products/cheese-pide"
                    className="bg-orange-500 text-white px-4 py-2 rounded-xl font-semibold hover:bg-orange-600 transition-colors text-sm"
                  >
                    –ó–∞–∫–∞–∑–∞—Ç—å
                  </Link>
                </div>
              </div>
            </div>
          </div>

          {/* CTA */}
          <div className="text-center mt-16">
            <Link 
              href="/products"
              className="group inline-flex items-center bg-orange-500 text-white px-8 py-4 rounded-2xl font-bold text-lg hover:bg-orange-600 transition-all duration-300 hover:scale-105 shadow-lg hover:shadow-xl"
            >
              <span>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –≤–∫—É—Å—ã</span>
              <svg className="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
              </svg>
            </Link>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* Section header */}
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?
            </h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              –ú—ã —Å–æ–∑–¥–∞–ª–∏ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π –¥–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è
            </p>
          </div>

          {/* Features grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {/* Fast delivery */}
            <div className="group bg-white rounded-2xl p-8 shadow-lg hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 border border-gray-100">
              <div className="w-16 h-16 bg-orange-500 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300">
                <Clock className="h-8 w-8 text-white" />
              </div>
              <h3 className="text-xl font-bold text-gray-900 mb-3 text-center">–ë—ã—Å—Ç—Ä–æ</h3>
              <p className="text-gray-600 text-center mb-4">–ì–æ—Ç–æ–≤–∏–º –∑–∞ 15-20 –º–∏–Ω—É—Ç</p>
              <div className="text-center">
                <span className="inline-block bg-orange-100 text-orange-600 px-3 py-1 rounded-full text-sm font-semibold">
                  ‚ö° –ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω–æ
                </span>
              </div>
            </div>

            {/* Delivery */}
            <div className="group bg-white rounded-2xl p-8 shadow-lg hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 border border-gray-100">
              <div className="w-16 h-16 bg-red-500 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300">
                <MapPin className="h-8 w-8 text-white" />
              </div>
              <h3 className="text-xl font-bold text-gray-900 mb-3 text-center">–î–æ—Å—Ç–∞–≤–∫–∞</h3>
              <p className="text-gray-600 text-center mb-4">–ü–æ –≤—Å–µ–º—É –ï—Ä–µ–≤–∞–Ω—É</p>
            <div className="text-center">
                <span className="inline-block bg-red-100 text-red-600 px-3 py-1 rounded-full text-sm font-semibold">
                  üöö 30 –º–∏–Ω
                </span>
              </div>
            </div>

            {/* Quality */}
            <div className="group bg-white rounded-2xl p-8 shadow-lg hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 border border-gray-100">
              <div className="w-16 h-16 bg-green-500 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300">
                <svg className="h-8 w-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <h3 className="text-xl font-bold text-gray-900 mb-3 text-center">–ö–∞—á–µ—Å—Ç–≤–æ</h3>
              <p className="text-gray-600 text-center mb-4">–¢–æ–ª—å–∫–æ —Å–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</p>
            <div className="text-center">
                <span className="inline-block bg-green-100 text-green-600 px-3 py-1 rounded-full text-sm font-semibold">
                  üåü –ü—Ä–µ–º–∏—É–º
                </span>
              </div>
            </div>

            {/* Support */}
            <div className="group bg-white rounded-2xl p-8 shadow-lg hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 border border-gray-100">
              <div className="w-16 h-16 bg-blue-500 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300">
                <Phone className="h-8 w-8 text-white" />
              </div>
              <h3 className="text-xl font-bold text-gray-900 mb-3 text-center">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h3>
              <p className="text-gray-600 text-center mb-4">+374 95-044-888</p>
            <div className="text-center">
                <span className="inline-block bg-blue-100 text-blue-600 px-3 py-1 rounded-full text-sm font-semibold">
                  üí¨ 24/7
                </span>
              </div>
            </div>
          </div>

          {/* Additional info */}
          <div className="mt-16 bg-orange-500 rounded-3xl p-8 text-white text-center">
            <h3 className="text-2xl font-bold mb-4">–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞</h3>
            <p className="text-lg text-orange-100 mb-6">
              –ï—Å–ª–∏ –≤–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –Ω–∞—à–∞ –ø–∏–¥–µ, –º—ã –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏ –∏–ª–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–º –Ω–æ–≤—É—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ!
            </p>
            <div className="flex flex-wrap justify-center gap-4">
              <div className="flex items-center space-x-2">
                <span className="text-2xl">‚úÖ</span>
                <span>100% —Å–≤–µ–∂–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã</span>
              </div>
              <div className="flex items-center space-x-2">
                <span className="text-2xl">‚úÖ</span>
                <span>–ì–∏–≥–∏–µ–Ω–∏—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞</span>
              </div>
              <div className="flex items-center space-x-2">
                <span className="text-2xl">‚úÖ</span>
                <span>–ì–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞</span>
              </div>
            </div>
          </div>
        </div>
      </section>


      {/* Testimonials Section */}
      <section className="py-20 bg-orange-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* Section header */}
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              –ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã
            </h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              –ë–æ–ª–µ–µ 1000 –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —É–∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –Ω–∞—à–∏ –ø–∏–¥–µ
            </p>
          </div>

          {/* Testimonials grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {/* Testimonial 1 */}
            <div className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
              <div className="flex items-center mb-4">
                <div className="flex text-yellow-400">
                  {[...Array(5)].map((_, i) => (
                    <svg key={i} className="w-5 h-5 fill-current" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  ))}
                </div>
              </div>
              <p className="text-gray-600 mb-6 italic">
                "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –≤–∫—É—Å–Ω—ã–µ –ø–∏–¥–µ! –ó–∞–∫–∞–∑—ã–≤–∞—é —É–∂–µ —Ç—Ä–µ—Ç–∏–π —Ä–∞–∑. –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!"
              </p>
              <div className="flex items-center">
                <div className="w-12 h-12 bg-orange-100 rounded-full flex items-center justify-center mr-4">
                  <span className="text-orange-500 font-bold text-lg">–ê</span>
                </div>
                <div>
                  <h4 className="font-semibold text-gray-900">–ê–Ω–Ω–∞ –ú–µ–ª–∏–∫—è–Ω</h4>
                  <p className="text-sm text-gray-500">–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç</p>
                </div>
              </div>
            </div>

            {/* Testimonial 2 */}
            <div className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
              <div className="flex items-center mb-4">
                <div className="flex text-yellow-400">
                  {[...Array(5)].map((_, i) => (
                    <svg key={i} className="w-5 h-5 fill-current" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  ))}
                </div>
              </div>
              <p className="text-gray-600 mb-6 italic">
                "–õ—É—á—à–∏–µ –ø–∏–¥–µ –≤ –ï—Ä–µ–≤–∞–Ω–µ! –ö–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –≤—ã—Å–æ—Ç–µ, —Ü–µ–Ω—ã –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–µ. –û—Å–æ–±–µ–Ω–Ω–æ –Ω—Ä–∞–≤–∏—Ç—Å—è –º—è—Å–Ω–∞—è –ø–∏–¥–µ —Å —Å–æ—É—Å–æ–º."
              </p>
              <div className="flex items-center">
                <div className="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mr-4">
                  <span className="text-red-500 font-bold text-lg">–î</span>
                </div>
                <div>
                  <h4 className="font-semibold text-gray-900">–î–∞–≤–∏–¥ –ê—Ä—É—Ç—é–Ω—è–Ω</h4>
                  <p className="text-sm text-gray-500">–ì—É—Ä–º–∞–Ω</p>
                </div>
              </div>
            </div>

            {/* Testimonial 3 */}
            <div className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
              <div className="flex items-center mb-4">
                <div className="flex text-yellow-400">
                  {[...Array(5)].map((_, i) => (
                    <svg key={i} className="w-5 h-5 fill-current" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  ))}
                </div>
              </div>
              <p className="text-gray-600 mb-6 italic">
                "–û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å! –ó–∞–∫–∞–∑–∞–ª –∫–æ–º–±–æ –Ω–∞ –¥–≤–æ–∏—Ö - –≤—Å–µ –±—ã–ª–æ –≥–æ—Ç–æ–≤–æ –∑–∞ 20 –º–∏–Ω—É—Ç. –ü–∏–¥–µ –æ—á–µ–Ω—å –≤–∫—É—Å–Ω—ã–µ –∏ —Å—ã—Ç–Ω—ã–µ."
              </p>
              <div className="flex items-center">
                <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mr-4">
                  <span className="text-blue-500 font-bold text-lg">–°</span>
                </div>
                <div>
                  <h4 className="font-semibold text-gray-900">–°–∞—Ä–≥–∏—Å –ü–µ—Ç—Ä–æ—Å—è–Ω</h4>
                  <p className="text-sm text-gray-500">–°—Ç—É–¥–µ–Ω—Ç</p>
                </div>
              </div>
            </div>
          </div>

          {/* Stats */}
          <div className="mt-16 grid grid-cols-2 md:grid-cols-4 gap-8 text-center">
            <div>
              <div className="text-4xl font-bold text-orange-500 mb-2">1000+</div>
              <div className="text-gray-600">–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
            </div>
            <div>
              <div className="text-4xl font-bold text-orange-500 mb-2">15+</div>
              <div className="text-gray-600">–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∫—É—Å–æ–≤</div>
            </div>
            <div>
              <div className="text-4xl font-bold text-orange-500 mb-2">20</div>
              <div className="text-gray-600">–ú–∏–Ω—É—Ç –¥–æ—Å—Ç–∞–≤–∫–∞</div>
            </div>
            <div>
              <div className="text-4xl font-bold text-orange-500 mb-2">4.9</div>
              <div className="text-gray-600">–†–µ–π—Ç–∏–Ω–≥ –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-orange-500 text-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-4xl md:text-5xl font-bold mb-6">
            –ì–æ—Ç–æ–≤—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?
          </h2>
          <p className="text-xl text-orange-100 mb-8 max-w-2xl mx-auto">
            –ó–∞–∫–∞–∂–∏—Ç–µ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 10% –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑!
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Link 
              href="/products"
              className="bg-white text-orange-500 px-8 py-4 rounded-xl font-bold text-lg hover:bg-gray-100 hover:scale-105 transition-all duration-300 shadow-lg"
            >
              –ó–∞–∫–∞–∑–∞—Ç—å —Å–µ–π—á–∞—Å
            </Link>
            <Link 
              href="/contact"
              className="border-2 border-white text-white px-8 py-4 rounded-xl font-bold text-lg hover:bg-white hover:text-orange-500 hover:scale-105 transition-all duration-300"
            >
              –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
            </Link>
          </div>
        </div>
      </section>

      <Footer />
    </div>
  );
}